Hi Laura,

thanks for forwarding me Auke's email.

UPDATE ON COVID
I and Luca were thinking about going back to Italy in the next few days, [a little bit earlier than planned,] because we are afraid that moving around is going to get more and more complex as COVID-19 continues to spread here in Switzerland. Moreover, our rent would ends in a couple of weeks and we'd prefer not to be forced to pay for another month (since we are required to work remotely anyway). 
We would travel back by car and our families (for now) haven't had any case of COVID, so it should be quite safe.
Obviously, if we are going to have the Skype-call with Emily this week, I will organize to avoid traveling in that day.
What do you think about it?

UPDATE ON WORK
I've implemented the code for multiple successive steps and started testing it with different body-shapes, I'm attaching a video of a multi-steps simulation (it's slow since I made it on my PC, the actual duration of the step is 1sec in simulation).
A (predictable) problem that arises is that the range of parameters that keeps the controller stable varies depending on the body-shape. Anyway, for now is not really a big problem, since they can be changed quickly and it's quite easy to find a new set of them that works fine.
I'm also attaching a second video showing a sort of "jamming" behaviour; it's what happen during the second step, the one with the left foot.
It appears depending on:
- the length of the leg
- how much the body is bent at the start of the step
- the angles that define the range sweeped by the leg (theta0 and thetaf of section 2.1 of the report)
I will add some pages to the report with an analyses I've done that explain why, basically, if the step start with some conditions the controller will make the body bend on the "wrong" side, curling the body even more, instead of making it extend and bend on the other side.
Finally, I've also started working on the math to switch to a Computed Torque Control (like yours on the leg) and it seems to be feasible; I'm starting to think how to implement it in the code now, and will let you know how it works.

Best,
Francesco


I suppose that the "jamming" problem can be understood better by thinking of the model as moving in a frictionless environment: since no external force or torque would be applied to the model, angular momentum around the foot's contact point must be conserved. Thus, if the COM start from a null speed, it can only move along the line connecting itself to the contact point, to keep a null value of the angular momentum (around the foot's contact point).
Combining this to the current controller (which tries only to keep a null speed of the COM along the y-axis) this would imply to have null velocity of the COM both along:
- the direction perpendicular to the line between the COM and the contact point;
- the y-axis.
Unless these two direction are parallel (a condition practically impossible to happen by chance), the conditions above would result in the model curling on himself to keep the COM fixed in the horizontal plane.
Furthemore, the direction of bending (right or left) given by the controller to counteract the movement of the COM depends on whether the rotation of the body given by the torque at girdle level (imagining it as rigid, for this purpose) tend to bring the COM closer or further to to the contact point, thus giving it a positive or negative speed along the y-axis, that the controller will try to counter by bending.
I suppose that the jamming behaviour shown in video might derives from something similar, except friction forces make it more complex and difficult to examine it analytically. In this case it just shows as the body bending in the "wrong" direction during the step with the left foot. The presence of friction actually allows the COM to move forward, since angular momentum is not conserved anymore.





